{"version":3,"file":"static/webpack/static/development/pages/index.js.43b85221f15a51f47a48.hot-update.js","sources":["webpack:///./lib/SlackBot.ts"],"sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport { IPData } from './IPSevice';\n\ntype SlackEmoji =\n    ':ghost:'               // üëª\n    | ':tada:'              // üéâ\n    | ':zap:'               // ‚ö°Ô∏è\n    | ':fire:'              // üî• \n    | ':ocean:'             // üåä\n    | ':octopus:'           // üêô\n    | ':t-rex:'             // ü¶ñ\n    | ':earth_africa:'      // üåç\n    | 'rocket'              // üöÄ\n    | 'satellite'           // üõ∞\n    | 'airplane'            // ‚úàÔ∏è\n    | 'x'                   // ‚ùå\n    | 'white_check_mark'    // ‚úÖ\n    | '100'                 // üíØ\n    | 'warning'             // ‚ö†Ô∏è\n    | 'e-mail'              // üìß\n    | 'euro'                // üí∂\n    | 'dollar'              // üíµ\n    | 'pound'               // üí∑\n    | 'floppy_disk'         // üíæ\n    | 'wave'                // üëã\n    | 'clap'                // üëè\n    | 'raised_hands'        // üôå\n    | 'grin'                // üòÅ\n    | 'confused'            // üòï\n\ninterface SlackAttachmentAction {\n    name: string\n    text: string\n    value: string\n    type: \"button\"\n    style: \"default\" | \"primary\" | \"danger\"\n}\n\ninterface SlackAttachmentField {\n    title: string\n    value: string\n    short: boolean\n}\n\ninterface SlackAttachment {\n    fallback: string\n    color: string\n    author_name?: string\n    title?: string\n    text?: string\n    actions?: SlackAttachmentAction[]\n    fields?: SlackAttachmentField[]\n}\n\ninterface SlackPayload {\n    text?: string;\n    username?: string;\n    icon_url?: string\n    icon_emoji?: SlackEmoji\n    attachments?: SlackAttachment[]\n}\n\nclass SlackBotClass {\n\n    hook: string\n\n    constructor(hookUrl: string) {\n        this.hook = hookUrl\n    }\n\n    async sendPayloadToSlack(payload: SlackPayload): Promise<boolean> {\n        try {\n            await fetch(this.hook, {\n                method: 'POST',\n                body: JSON.stringify(payload)\n            })\n            return true\n        }\n        catch (error) {\n            console.warn(error)\n            return false\n        }\n    }\n\n    link = (url: string, label: string) => ` <${url}|${label}>`\n\n    mapsUrl = (postal: string, city: string, country: string) => `https://www.google.com/maps/?q=${postal} ${city} ${country}`\n\n    mapsLink = (city: string, country: string, postal: string) => `<${this.mapsUrl(city, country, postal)}|${city}, ${country}>`\n\n    generateVisitorID = (): string => `_${Math.random().toString(36).substr(2, 9)}`\n\n    sendTextMessage = (text: string) => this.sendPayloadToSlack({ text })\n\n\n    sendSiteVisitNotification = (ipData: IPData) => {\n\n        let siteVisitorId = localStorage.getItem('SITE_VISITOR_ID')\n        let visitType = siteVisitorId ? 'New' : 'Returning'\n        if (!siteVisitorId) {\n            siteVisitorId = this.generateVisitorID()\n            localStorage.setItem('SITE_VISITOR_ID', siteVisitorId)\n        }\n\n        const message = `${visitType} Site visit`\n        const visitor = `ID: ${siteVisitorId}`\n        const location = this.mapsUrl(ipData.postal, ipData.city, ipData.country_name)\n\n        this.sendPayloadToSlack({\n            icon_emoji: ':zap:',\n            attachments: [\n                {\n                    color: '#FFAD2C',\n                    title: 'Site Notification',\n                    fallback: message,\n                    text: message,\n                    fields: [\n                        {\n                            title: 'Location',\n                            value: location,\n                            short: false\n                        },\n                        {\n                            title: 'Visitor',\n                            value: visitor,\n                            short: false\n                        }\n                    ],\n                }\n            ]\n        })\n    }\n\n}\n\nconst angelica_hook = \"https://hooks.slack.com/services/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\"\nconst test_hook = 'https://hooks.slack.com/services/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'\n\nexport const SlackBot = new SlackBotClass(test_hook) \n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AA6DA;;;AAIA;AAAA;AACA;AADA;AACA;AADA;AAkBA;AAAA;AACA;AAnBA;AAoBA;AAAA;AACA;AArBA;AAsBA;AAAA;AACA;AAvBA;AAwBA;AAAA;AACA;AAzBA;AA0BA;AAAA;AAAA;AAAA;AACA;AA3BA;AA+BA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAXA;AAHA;AAuBA;AACA;AAjEA;AACA;AACA;;;;;;AACA;;;;;;;AAEA;AACA;AACA;AAFA;AACA;;AAGA;AACA;;;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AAEA;;;;A","sourceRoot":""}