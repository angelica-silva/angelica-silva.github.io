{"version":3,"file":"static/webpack/static/development/pages/index.js.f6909274c623e96781a2.hot-update.js","sources":["webpack:///./lib/SlackBot.ts"],"sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport { IPData } from './IPSevice';\n\ntype SlackEmoji =\n    ':ghost:'               // 👻\n    | ':tada:'              // 🎉\n    | ':zap:'               // ⚡️\n    | ':fire:'              // 🔥 \n    | ':ocean:'             // 🌊\n    | ':octopus:'           // 🐙\n    | ':t-rex:'             // 🦖\n    | ':earth_africa:'      // 🌍\n    | 'rocket'              // 🚀\n    | 'satellite'           // 🛰\n    | 'airplane'            // ✈️\n    | 'x'                   // ❌\n    | 'white_check_mark'    // ✅\n    | '100'                 // 💯\n    | 'warning'             // ⚠️\n    | 'e-mail'              // 📧\n    | 'euro'                // 💶\n    | 'dollar'              // 💵\n    | 'pound'               // 💷\n    | 'floppy_disk'         // 💾\n    | 'wave'                // 👋\n    | 'clap'                // 👏\n    | 'raised_hands'        // 🙌\n    | 'grin'                // 😁\n    | 'confused'            // 😕\n\ninterface SlackAttachmentAction {\n    name: string\n    text: string\n    value: string\n    type: \"button\"\n    style: \"default\" | \"primary\" | \"danger\"\n}\n\ninterface SlackAttachment {\n    fallback: string\n    color: string\n    author_name?: string\n    title?: string\n    text?: string\n    actions?: SlackAttachmentAction[]\n}\n\ninterface SlackPayload {\n    text?: string;\n    username?: string;\n    icon_url?: string\n    icon_emoji?: SlackEmoji\n    attachments?: SlackAttachment[]\n}\n\nclass SlackBotClass {\n\n    hook: string\n\n    constructor(hookUrl: string) {\n        this.hook = hookUrl\n    }\n\n    async sendPayloadToSlack(payload: SlackPayload): Promise<boolean> {\n        try {\n            await fetch(this.hook, {\n                method: 'POST',\n                body: JSON.stringify(payload)\n            })\n            return true\n        }\n        catch (error) {\n            console.warn(error)\n            return false\n        }\n    }\n\n    link = (url: string, label: string) => ` <${url}|${label}>`\n\n    mapsUrl = (postal: string, city: string, country: string) => `https://www.google.com/maps/?q=${postal} ${city} ${country}`\n\n\n    sendTextMessage(text: string) {\n        this.sendPayloadToSlack({\n            text\n        })\n    }\n\n\n    sendSiteVisitNotification = (ipdata: IPData) => {\n        this.sendPayloadToSlack({\n            icon_emoji: ':zap:',\n            attachments: [\n                {\n                    color: '#',\n                    title: 'Site Notification',\n                    fallback: '',\n                    text: ''\n                }\n            ]\n        })\n    }\n\n}\n\nconst angelica_hook = \"https://hooks.slack.com/services/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\"\nconst test_hook = 'https://hooks.slack.com/services/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'\n\nexport const SlackBot = new SlackBotClass(test_hook) \n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAsDA;;;AAIA;AAAA;AACA;AADA;AACA;AADA;AAkBA;AAAA;AACA;AAnBA;AAoBA;AAAA;AACA;AArBA;AA+BA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAHA;AAWA;AACA;AA1CA;AACA;AACA;;;;;;AACA;;;;;;;AAEA;AACA;AACA;AAFA;AACA;;AAGA;AACA;;;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AAQA;AACA;AACA;AADA;AAGA;;;;;;AAmBA;AACA;AAEA;;;;A","sourceRoot":""}